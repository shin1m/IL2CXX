#version 300 es

layout(std140) uniform type_VertexConstants
{
    mat4 Projection;
    vec3 CameraPosition;
    float Padding0;
    vec3 CameraRight;
    float Padding1;
    vec3 CameraUp;
    float Padding2;
    vec3 CameraBackward;
} VertexConstants;

layout(location = 0) in vec3 TriangleA;
layout(location = 1) in uint TrianglePackedColor;
layout(location = 2) in vec3 TriangleB;
layout(location = 3) in float TriangleX;
layout(location = 4) in vec3 TriangleC;
layout(location = 5) in float TriangleY;
layout(location = 6) in uvec2 TrianglePackedOrientation;
layout(location = 7) in float TriangleZ;

out vec3 varying_RayDirection;
flat out vec3 varying_Position;
flat out uint varying_PackedColor;
flat out vec4 varying_Orientation;

void main()
{
    int _60 = int(uint(gl_VertexID) / 3u);
    int _64 = int(uint(gl_VertexID) - uint(_60 * 3));
    vec3 _86 = vec3(TriangleX, TriangleY, TriangleZ) - VertexConstants.CameraPosition;
    uint _93 = (TrianglePackedOrientation.x & 32768u) << 16u;
    uint _97 = TrianglePackedOrientation.x >> 16u;
    uint _103 = (_97 & 32768u) << 16u;
    uint _113 = (TrianglePackedOrientation.y & 32768u) << 16u;
    uint _117 = TrianglePackedOrientation.y >> 16u;
    uint _123 = (_117 & 32768u) << 16u;
    vec4 _127 = vec4(uintBitsToFloat((floatBitsToUint(float(TrianglePackedOrientation.x & 32767u) * 3.0518509447574615478515625e-05) | _93) | _93), uintBitsToFloat((floatBitsToUint(float(_97 & 32767u) * 3.0518509447574615478515625e-05) | _103) | _103), uintBitsToFloat((floatBitsToUint(float(TrianglePackedOrientation.y & 32767u) * 3.0518509447574615478515625e-05) | _113) | _113), uintBitsToFloat((floatBitsToUint(float(_117 & 32767u) * 3.0518509447574615478515625e-05) | _123) | _123));
    vec4 _130 = _127 / vec4(length(_127));
    float _131 = _130.x;
    float _132 = _131 + _131;
    float _133 = _130.y;
    float _134 = _133 + _133;
    float _135 = _130.z;
    float _136 = _135 + _135;
    float _138 = _131 * _134;
    float _139 = _131 * _136;
    float _140 = _133 * _134;
    float _141 = _133 * _136;
    float _142 = _135 * _136;
    float _143 = _130.w;
    float _144 = _143 * _132;
    float _145 = _143 * _134;
    float _146 = _143 * _136;
    float _152 = 1.0 - (_131 * _132);
    vec3 _169 = _86 + (mat3(vec3((1.0 - _140) - _142, _138 + _146, _139 - _145), vec3(_138 - _146, _152 - _142, _141 + _144), vec3(_139 + _145, _141 - _144, _152 - _140)) * mix(mix(TriangleB, TriangleC, bvec3(_64 == 1)), TriangleA, bvec3(_64 == 0)));
    gl_Position = VertexConstants.Projection * vec4(_169 * mat3(VertexConstants.CameraRight, VertexConstants.CameraUp, VertexConstants.CameraBackward), 1.0);
    varying_RayDirection = _169;
    varying_Position = _86;
    varying_PackedColor = TrianglePackedColor;
    varying_Orientation = _130;
}

