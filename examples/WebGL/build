#!/bin/bash
BASE=$(cd $(dirname $0) && pwd)
cd $BASE
if [ "$1" == '' ]; then
	dotnet publish -c Release || exit $?
	rm -rf il2cxx || exit $?
	mkdir -p il2cxx/source || exit $?
	(cd bin/Release/net7.0/browser-wasm/AppBundle/managed && cp\
	 System.Runtime.InteropServices.JavaScript.dll\
	 WebGL.dll\
	 $BASE/il2cxx/source\
	) || exit $?
	cd il2cxx || exit $?
	dotnet run --project $BASE/../../IL2CXX.Console --target Other --is32\
	 --out out source/WebGL.dll\
	 --bundle\
	  'System.Runtime.InteropServices.JavaScript.JavaScriptExports, System.Runtime.InteropServices.JavaScript'\
	 --reflection\
	  'System.Runtime.InteropServices.JavaScript.JavaScriptExports, System.Runtime.InteropServices.JavaScript'\
	  'System.Threading.Tasks.Task`1, System.Private.CoreLib'\
	  'Program, WebGL'\
	 || exit $?
	mkdir out/build || exit $?
	cd out/build || exit $?
	emcmake cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=1 -DCMAKE_CXX_FLAGS='-msimd128' .. || exit $?
else
	cd il2cxx/out/build || exit $?
fi
cmake --build . -j8 || exit $?
(cd $BASE/bin/Release/net7.0/browser-wasm/AppBundle && cp -a\
 dotnet.timezones.blat\
 icudt.dat\
 index.html\
 main.js\
 webgl.js\
 data\
 $BASE/il2cxx/out/build\
) || exit $?
(cd ../wasm/src && cp\
 mono-config.json\
 $BASE/il2cxx/out/build\
) || exit $?
sed -i 's/"mainAssemblyName": ""/"mainAssemblyName": "WebGL.dll"/' mono-config.json || exit $?
cp $BASE/serve.json $BASE/il2cxx/out/build || exit $?
